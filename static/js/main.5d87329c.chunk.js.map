{"version":3,"sources":["redux/auth/authOperations.js","redux/auth/authSelectors.js","utils/api/phonebookAPI.js","utils/Loading/index.js","utils/Loading/Loading.js","routes.js","utils/PrivateRoute/PrivateRoute.js","utils/PrivateRoute/PrivateRouteContainer.js","utils/PublicRoute/PublicRoute.js","utils/PublicRoute/PublicRouteContainer.js","components/UnauthorizedNav/UnauthorizedNav.js","components/AuthorizedNav/AuthorizedNav.js","components/AuthorizedNav/AuthorizedNavContainer.js","components/Navigation/Navigation.js","components/Navigation/NavigationContainer.js","components/Notification/Notification.js","components/Notification/NotificationContainer.js","App.js","redux/store.js","index.js","redux/phonebook/phonebookActions.js","redux/phonebook/phonebookOperations.js","redux/phonebook/phonebookSelectors.js","redux/auth/authReducers.js","redux/phonebook/phonebookReducers.js","redux/auth/authActions.js"],"names":["addUser","user","dispatch","authActions","addUserRequest","phonebookAPI","createUser","then","response","token","set","data","addUserSuccess","catch","error","addUserError","getUser","getUserRequest","getCurrentUser","getUserSuccess","getUserError","loginUser","loginRequest","login","loginSuccess","loginError","logoutUser","logoutRequest","logout","unset","logoutSuccess","logoutError","deleteUser","deleteUserRequest","deleteUserAccount","deleteUserSuccess","deleteUserError","getToken","state","auth","getName","name","isAuthenticated","Boolean","userError","axios","defaults","baseURL","headers","post","common","Authorization","get","delete","getContacts","addContact","contact","deleteContact","id","Loading","type","color","height","width","routesList","PrivateRoute","Component","component","routeProps","render","props","to","connect","authSelectors","PublicRoute","useStyles","makeStyles","theme","link","textDecoration","UnauthorizedNav","classes","Toolbar","className","Button","AuthorizedNav","Typography","variant","userName","onClick","logOut","IconButton","authOperations","root","flexGrow","marginBottom","spacing","menuButton","marginRight","title","navLink","navLinkActive","pink","Navigation","AppBar","position","activeClassName","closeButton","top","right","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","Notification","handleClose","removeUserError","removeContactsError","Modal","aria-labelledby","aria-describedby","open","contactsError","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","htmlFor","aria-label","message","phonebookSelectors","phonebookActions","App","this","Container","fixed","maxWidth","fallback","path","exact","lazy","phonebookOperations","authConfig","key","storage","whitelist","serialize","store","configureStore","reducer","persistReducer","authReducers","phonebook","phonebookReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","loading","document","getElementById","getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContacts","filter","getAllContacts","contacts","getPhonebookFilter","getVisibleContacts","createSelector","toLowerCase","includes","getContactById","_","find","item","initialUserState","email","createReducer","action","payload","combineReducers"],"mappings":"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","file":"static/js/main.5d87329c.chunk.js","sourcesContent":["import authActions from './authActions';\nimport phonebookAPI from '../../utils/api/phonebookAPI';\n\nconst addUser = user => dispatch => {\n  dispatch(authActions.addUserRequest());\n  phonebookAPI\n    .createUser(user)\n    .then(response => {\n      phonebookAPI.token.set(response.data.token);\n      return dispatch(authActions.addUserSuccess(response.data));\n    })\n    .catch(error => dispatch(authActions.addUserError(error)));\n};\n\nconst getUser = () => dispatch => {\n  dispatch(authActions.getUserRequest());\n  phonebookAPI\n    .getCurrentUser()\n    .then(response => dispatch(authActions.getUserSuccess(response.data)))\n    .catch(error => dispatch(authActions.getUserError(error)));\n};\n\nconst loginUser = user => dispatch => {\n  dispatch(authActions.loginRequest());\n  phonebookAPI\n    .login(user)\n    .then(response => {\n      phonebookAPI.token.set(response.data.token);\n      return dispatch(authActions.loginSuccess(response.data));\n    })\n    .catch(error => dispatch(authActions.loginError(error)));\n};\n\nconst logoutUser = () => dispatch => {\n  dispatch(authActions.logoutRequest());\n  phonebookAPI\n    .logout()\n    .then(response => {\n      phonebookAPI.token.unset();\n      dispatch(authActions.logoutSuccess());\n    })\n    .catch(error => dispatch(authActions.logoutError(error)));\n};\n\nconst deleteUser = () => dispatch => {\n  dispatch(authActions.deleteUserRequest());\n  phonebookAPI\n    .deleteUserAccount()\n    .then(response => {\n      phonebookAPI.token.unset();\n      dispatch(authActions.deleteUserSuccess());\n    })\n    .catch(error => authActions.deleteUserError(error));\n};\n\nexport default {\n  addUser,\n  getUser,\n  loginUser,\n  logoutUser,\n  deleteUser,\n};\n","const getToken = state => state.auth.token;\n\nconst getName = state => state.auth.user.name;\n\nconst isAuthenticated = state => Boolean(state.auth.token);\n\nconst userError = state => state.auth.error;\n\nexport default { getToken, getName, isAuthenticated, userError };\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst createUser = user => axios.post('/users/signup', user);\n\nconst login = user => axios.post('/users/login', user);\n\nconst logout = () => axios.post('/users/logout');\n\nconst getCurrentUser = () => axios.get('/users/current');\n\nconst deleteUserAccount = token => axios.delete('/users/current', token);\n\nconst getContacts = () => axios.get('/contacts');\n\nconst addContact = contact => axios.post('/contacts', contact);\n\nconst deleteContact = id => axios.delete(`/contacts/${id}`);\n\nexport default {\n  createUser,\n  login,\n  logout,\n  getCurrentUser,\n  deleteUserAccount,\n\n  token,\n\n  getContacts,\n  addContact,\n  deleteContact,\n};\n","import Loading from \"./Loading\";\n\nexport default Loading;\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nconst Loading = () => (\n  <div>\n    <Loader type=\"MutatingDots\" color=\"#303F9D\" height={100} width={100} />\n  </div>\n);\n\nexport default Loading;\n","const routesList = {\n  HOME: '/',\n  REGISTER: '/register',\n  LOGIN: '/login',\n  CONTACTS: '/contacts',\n};\n\nconst parameters = [\n  { path: '/', name: 'Home', exact: true, private: false, restricted: false },\n  {\n    path: '/register',\n    name: 'Register',\n    exact: false,\n    private: false,\n    restricted: true,\n  },\n  {\n    path: '/login',\n    name: 'Login',\n    exact: false,\n    private: false,\n    restricted: true,\n  },\n  { path: '/contacts', name: 'Contacts', exact: false, private: true },\n];\n\nexport { routesList, parameters };\n","import React from 'react';\n\nimport { Route, Redirect } from 'react-router-dom';\nimport { routesList } from '../../routes';\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props => {\n      return isAuthenticated ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to={routesList.HOME} />\n      );\n    }}\n  />\n);\n\nexport default PrivateRoute;\n","import { connect } from 'react-redux';\n\nimport PrivateRoute from './PrivateRoute';\nimport { authSelectors } from '../../redux/auth';\n\nconst mapStateToProps = state => {\n  return { isAuthenticated: authSelectors.isAuthenticated(state) };\n};\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { routesList } from '../../routes';\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props => {\n      return isAuthenticated ? (\n        <Redirect to={routesList.HOME} />\n      ) : (\n        <Component {...props} />\n      );\n    }}\n  />\n);\n\nexport default PublicRoute;\n","import { connect } from 'react-redux';\n\nimport PublicRoute from './PublicRoute';\nimport { authSelectors } from '../../redux/auth';\n\nconst mapStateToProps = state => {\n  return { isAuthenticated: authSelectors.isAuthenticated(state) };\n};\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { routesList } from '../../routes';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n  link: {\n    textDecoration: 'none',\n    color: '#fff',\n  },\n}));\n\nconst UnauthorizedNav = props => {\n  const classes = useStyles();\n  return (\n    <Toolbar>\n      <Link to={routesList.REGISTER} className={classes.link}>\n        <Button color=\"inherit\">Register</Button>\n      </Link>\n      <Link to={routesList.LOGIN} className={classes.link}>\n        <Button color=\"inherit\">Login</Button>\n      </Link>\n    </Toolbar>\n  );\n};\n\nexport default UnauthorizedNav;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Typography from '@material-ui/core/Typography';\n\nconst AuthorizedNav = props => {\n  return (\n    <Toolbar>\n      <Typography variant=\"h6\">{props.userName}</Typography>\n      <AccountCircle />\n      <Button onClick={props.logOut} color=\"inherit\">\n        Log Out\n      </Button>\n      <IconButton\n        onClick={props.deleteUser}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        <DeleteIcon />\n      </IconButton>\n    </Toolbar>\n  );\n};\n\nAuthorizedNav.propTypes = {\n  userName: PropTypes.string,\n  logOut: PropTypes.func.isRequired,\n  deleteUser: PropTypes.func.isRequired,\n};\n\nexport default AuthorizedNav;\n","import { connect } from 'react-redux';\n\nimport AuthorizedNav from './AuthorizedNav';\nimport { authOperations, authSelectors } from '../../redux/auth';\n\nconst mapStateToProps = state => {\n  return { userName: authSelectors.getName(state) };\n};\n\nexport default connect(mapStateToProps, {\n  logOut: authOperations.logoutUser,\n  deleteUser: authOperations.deleteUser,\n})(AuthorizedNav);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { routesList } from '../../routes';\n\nimport UnauthorizedNav from '../UnauthorizedNav';\nimport AuthorizedNav from '../AuthorizedNav';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport pink from '@material-ui/core/colors/pink';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: theme.spacing(2),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  navLink: {\n    color: '#fff',\n    textDecoration: 'none',\n    marginRight: theme.spacing(2),\n  },\n  navLinkActive: {\n    color: pink,\n  },\n}));\n\nconst Navigation = props => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            <NavLink\n              to={routesList.HOME}\n              className={classes.navLink}\n              activeClassName={classes.navLinkActive}\n            >\n              HOME\n            </NavLink>\n            {props.isAuthenticated && (\n              <NavLink\n                to={routesList.CONTACTS}\n                className={classes.navLink}\n                activeClassName={classes.navLinkActive}\n              >\n                CONTACTS\n              </NavLink>\n            )}\n          </Typography>\n          {props.isAuthenticated ? <AuthorizedNav /> : <UnauthorizedNav />}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nNavigation.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n};\n\nexport default Navigation;\n","import { connect } from 'react-redux';\n\nimport Navigation from './Navigation';\nimport { authSelectors } from '../../redux/auth';\n\nconst mapStateToProps = state => {\n  return { isAuthenticated: authSelectors.isAuthenticated(state) };\n};\n\nexport default connect(mapStateToProps)(Navigation);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles(theme => ({\n  closeButton: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction Notification(props) {\n  const classes = useStyles();\n\n  const handleClose = () => {\n    props.removeUserError();\n    props.removeContactsError();\n  };\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={Boolean(props.userError || props.contactsError)}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={props.userError || props.contactsError}>\n          <div className={classes.paper}>\n            <label htmlFor=\"icon-button-file\" className={classes.closeButton}>\n              <IconButton\n                onClick={handleClose}\n                color=\"primary\"\n                aria-label=\"upload picture\"\n                component=\"span\"\n              >\n                <CloseIcon />\n              </IconButton>\n            </label>\n            <h2 id=\"transition-modal-title\">\n              There is an error during operation\n            </h2>\n            <p id=\"transition-modal-description\">\n              {props.userError && props.userError.message}\n              {props.contactsError && props.contactsError.message}\n            </p>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\nNotification.propTypes = {\n  userError: PropTypes.object,\n  contactsError: PropTypes.object,\n};\n\nexport default Notification;\n","import { connect } from 'react-redux';\n\nimport Notification from './Notification';\nimport { authSelectors, authActions } from '../../redux/auth';\nimport { phonebookActions, phonebookSelectors } from '../../redux/phonebook';\n\nconst mapStateToProps = state => {\n  return {\n    userError: authSelectors.userError(state),\n    contactsError: phonebookSelectors.contactsError(state),\n  };\n};\nexport default connect(mapStateToProps, {\n  removeUserError: authActions.removeUserError,\n  removeContactsError: phonebookActions.removeContactsError,\n})(Notification);\n","import React, { Component, lazy, Suspense } from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Container from '@material-ui/core/Container';\n\nimport { routesList } from './routes';\nimport { authOperations, authSelectors } from './redux/auth';\nimport { phonebookOperations } from './redux/phonebook';\nimport phonebookAPI from './utils/api/phonebookAPI';\n\nimport PrivateRoute from './utils/PrivateRoute';\nimport PublicRoute from './utils/PublicRoute';\nimport Navigation from './components/Navigation';\nimport Notification from './components/Notification';\nimport Loading from './utils/Loading';\n\nclass App extends Component {\n  static propTypes = {\n    token: PropTypes.string,\n  };\n\n  componentDidMount() {\n    if (this.props.token) {\n      phonebookAPI.token.set(this.props.token);\n      this.props.getUser();\n      this.props.getContacts();\n    }\n  }\n\n  render() {\n    return (\n      <Container fixed maxWidth=\"md\">\n        <Suspense fallback={<Loading />}>\n          <Notification />\n          <Navigation />\n          <Switch>\n            <Route\n              path={routesList.HOME}\n              exact\n              component={lazy(() => import('./views/HomeView'))}\n            />\n            <PrivateRoute\n              path={routesList.CONTACTS}\n              component={lazy(() => import('./views/ContactsView'))}\n            />\n            <PublicRoute\n              path={routesList.LOGIN}\n              component={lazy(() => import('./views/LoginView'))}\n            />\n            <PublicRoute\n              path={routesList.REGISTER}\n              component={lazy(() => import('./views/RegisterView'))}\n            />\n            <Redirect to={routesList.HOME} />\n          </Switch>\n        </Suspense>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { token: authSelectors.getToken(state) };\n};\n\nexport default connect(mapStateToProps, {\n  getUser: authOperations.getUser,\n  getContacts: phonebookOperations.getContacts,\n})(App);\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistReducer,\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport phonebookReducers from './phonebook/phonebookReducers';\nimport authReducers from './auth/authReducers';\n\nconst authConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n  serialize: true,\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authConfig, authReducers),\n    phonebook: phonebookReducers,\n  },\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport { store };\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\n\nimport Loading from './utils/Loading';\nimport App from './App';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={<Loading />} persistor={persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n","import { createAction } from '@reduxjs/toolkit';\n\nconst getContactsRequest = createAction('contacts/getRequest');\nconst getContactsSuccess = createAction('contacts/getSuccess');\nconst getContactsError = createAction('contacts/getError');\n\nconst addContactRequest = createAction('contacts/addRequest');\nconst addContactSuccess = createAction('contacts/addSuccess');\nconst addContactError = createAction('contacts/addError');\n\nconst deleteContactRequest = createAction('contacts/deleteRequest');\nconst deleteContactSuccess = createAction('contacts/deleteSuccess');\nconst deleteContactError = createAction('contacts/deleteError');\n\nconst filterContacts = createAction('contacts/filterContacts');\n\nconst removeContactsError = createAction('contacts/removeError');\n\nconst phonebookActions = {\n  filterContacts,\n\n  removeContactsError,\n\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n};\n\nexport default phonebookActions;\n","import phonebookActions from './phonebookActions';\nimport phonebookAPI from '../../utils/api/phonebookAPI';\n\nconst addContact = contact => dispatch => {\n  dispatch(phonebookActions.addContactRequest());\n  phonebookAPI\n    .addContact(contact)\n    .then(response =>\n      dispatch(phonebookActions.addContactSuccess(response.data)),\n    )\n    .catch(error => phonebookActions.addContactError(error));\n};\n\nconst getContacts = () => dispatch => {\n  dispatch(phonebookActions.getContactsRequest());\n  phonebookAPI\n    .getContacts()\n    .then(response =>\n      dispatch(phonebookActions.getContactsSuccess(response.data)),\n    )\n    .catch(error => dispatch(phonebookActions.getContactsError(error)));\n};\n\nconst deleteContact = id => dispatch => {\n  dispatch(phonebookActions.deleteContactRequest());\n  phonebookAPI\n    .deleteContact(id)\n    .then(response => {\n      dispatch(phonebookActions.filterContacts(''));\n      dispatch(phonebookActions.deleteContactSuccess(id));\n    })\n    .catch(error => dispatch(phonebookActions.deleteContactError(error)));\n};\n\nconst filterContacts = filter => dispatch => {\n  dispatch(phonebookActions.filterContacts(filter));\n};\n\nexport default { addContact, getContacts, deleteContact, filterContacts };\n","import { createSelector } from 'reselect';\n\nconst getAllContacts = state => state.phonebook.contacts;\n\nconst getPhonebookFilter = state => state.phonebook.filter;\n\nconst getVisibleContacts = createSelector(\n  [getAllContacts, getPhonebookFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  },\n);\n\nconst contactsError = state => state.phonebook.error;\n\nconst getContactById = createSelector(\n  [getAllContacts, (_, id) => id],\n  (contacts, id) => contacts.find(item => item.id === id),\n);\n\nexport default {\n  getAllContacts,\n  getContactById,\n  getVisibleContacts,\n  getPhonebookFilter,\n  contactsError,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport authActions from './authActions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.addUserSuccess]: (_, action) => action.payload.user,\n  [authActions.getUserSuccess]: (_, action) => action.payload,\n  [authActions.loginSuccess]: (_, action) => action.payload.user,\n  [authActions.logoutSuccess]: (_, action) => initialUserState,\n  [authActions.deleteUserSuccess]: (_, action) => initialUserState,\n});\n\nconst token = createReducer(null, {\n  [authActions.addUserSuccess]: (_, action) => action.payload.token,\n  [authActions.loginSuccess]: (_, action) => action.payload.token,\n  [authActions.logoutSuccess]: (_, action) => null,\n  [authActions.deleteUserSuccess]: (_, action) => null,\n});\n\nconst error = createReducer(null, {\n  [authActions.addUserError]: (_, action) => action.payload,\n  [authActions.getUserError]: (_, action) => action.payload,\n  [authActions.loginError]: (_, action) => action.payload,\n  [authActions.logoutError]: (_, action) => action.payload,\n  [authActions.deleteUserError]: (_, action) => action.payload,\n  [authActions.removeUserError]: (_, action) => null,\n});\n\nexport default combineReducers({ user, token, error });\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport { phonebookActions } from './index';\n\nconst contacts = createReducer([], {\n  [phonebookActions.addContactSuccess]: (state, action) => [\n    ...state,\n    action.payload,\n  ],\n  [phonebookActions.getContactsSuccess]: (_, action) => [...action.payload],\n  [phonebookActions.deleteContactSuccess]: (state, action) =>\n    state.filter(contact => contact.id !== action.payload),\n});\n\nconst filter = createReducer('', {\n  [phonebookActions.filterContacts]: (_, action) => action.payload,\n});\n\nconst error = createReducer(null, {\n  [phonebookActions.addContactError]: (_, action) => action.payload,\n  [phonebookActions.getContactsError]: (_, action) => action.payload,\n  [phonebookActions.deleteContactError]: (_, action) => action.payload,\n  [phonebookActions.removeContactsError]: (_, action) => null,\n});\n\nexport default combineReducers({ contacts, filter, error });\n","import { createAction } from '@reduxjs/toolkit';\n\nconst addUserRequest = createAction('auth/addRequest');\nconst addUserSuccess = createAction('auth/addSuccess');\nconst addUserError = createAction('auth/addError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getUserRequest = createAction('auth/getRequest');\nconst getUserSuccess = createAction('auth/getSuccess');\nconst getUserError = createAction('auth/getError');\n\nconst deleteUserRequest = createAction('auth/deleteRequest');\nconst deleteUserSuccess = createAction('auth/deleteSuccess');\nconst deleteUserError = createAction('auth/deleteError');\n\nconst removeUserError = createAction('auth/removeError');\n\nexport default {\n  addUserRequest,\n  addUserSuccess,\n  addUserError,\n\n  loginRequest,\n  loginSuccess,\n  loginError,\n\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n\n  getUserRequest,\n  getUserSuccess,\n  getUserError,\n\n  deleteUserRequest,\n  deleteUserSuccess,\n  deleteUserError,\n\n  removeUserError,\n};\n"],"sourceRoot":""}